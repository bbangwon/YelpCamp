<% layout('/layouts/boilerplate') %>
    <link rel="stylesheet" href="/css/stars.css">
    <div class="row">
        <div class="col-6">            
            <div id="campgroundCarousel" class="carousel slide">
                <div class="carousel-inner">
                    <% campground.images.forEach((img, i) => { %>
                        <div class="carousel-item <%= i === 0? 'active':'' %>">
                            <img src="<%= img.url %>" class="d-block w-100" alt="">
                        </div>
                    <% }); %>
                </div>
                <% if (campground.images.length > 1) { %>
                    <button class="carousel-control-prev" type="button" data-bs-target="#campgroundCarousel"
                        data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#campgroundCarousel"
                        data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>                 
                <% } %>
            </div>
            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">
                        <%= campground.title %>
                    </h5>
                    <p class="card-text">
                        <%= campground.description %>
                    </p>
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item text-muted">
                        <%= campground.location %>
                    </li>
                    <li class="list-group-item">
                        <%= campground.author.username %>이 작성함.
                    </li>
                    <li class="list-group-item">￦<%= campground.price %>/night</li>
                </ul>
                <% if (currentUser && campground.author.equals(currentUser._id)) { %>
                    <div class="card-body">
                        <a href="/campgrounds/<%= campground._id %>/edit" class="card-link btn btn-info">수정</a>
                        <a href="#" id="deleteButton" class="card-link btn btn-danger">삭제</a>
                    </div>
                    <% } %>

                        <div class="card-footer text-muted">
                            2일 전
                        </div>
            </div>
        </div>
        <div class="col-6">
            <div id='map'></div>
            <% if (currentUser) { %>
                <!-- 리뷰 폼 -->
                <h2>리뷰를 남겨주세요</h2>
                <form id="reviewForm" action="/campgrounds/<%= campground._id %>/reviews" class="mb-3 validated-form"
                    novalidate>
                    <div class="mb-3">
                        <fieldset class="starability-basic">
                            <input type="radio" id="no-rate" class="input-no-rate" name="rating" value="1" checked
                                aria-label="No rating." />
                            <input type="radio" id="first-rate1" name="rating" value="1" />
                            <label for="first-rate1" title="Terrible">1 star</label>
                            <input type="radio" id="first-rate2" name="rating" value="2" />
                            <label for="first-rate2" title="Not good">2 stars</label>
                            <input type="radio" id="first-rate3" name="rating" value="3" />
                            <label for="first-rate3" title="Average">3 stars</label>
                            <input type="radio" id="first-rate4" name="rating" value="4" />
                            <label for="first-rate4" title="Very good">4 stars</label>
                            <input type="radio" id="first-rate5" name="rating" value="5" />
                            <label for="first-rate5" title="Amazing">5 stars</label>
                        </fieldset>
                    </div>
                    <div class="mb-3">
                        <label for="body" class="form-label">리뷰</label>
                        <textarea class="form-control" id="body" rows="3" required></textarea>
                        <div class="valid-feedback">작성완료!</div>
                    </div>
                    <button id="reviewButton" class="btn btn-success">작성</button>
                </form>
                <% } %>
                    <% for(let review of campground.reviews) { %>
                        <div class="card mb-3">
                            <div class="card-body">
                                <h5 class="card-title">
                                    <%= review.author.username %>
                                </h5>
                                <p class="starability-result" data-rating="<%= review.rating %>">
                                    평점: <%= review.rating %>
                                </p>
                                <p class="card-text">
                                    리뷰 : <%= review.body %>
                                </p>
                                <% if (currentUser && review.author.equals(currentUser._id)) { %>
                                    <form action="/campgrounds/<%= campground._id %>/reviews/<%= review._id %>"
                                        method="POST">
                                        <button name="reviewDeleteButton" class="btn btn-sm btn-danger">삭제</button>
                                    </form>
                                    <% } %>
                            </div>
                        </div>
                        <% } %>
        </div>
    </div>
    

    <script>
        const deleteButton = document.querySelector('#deleteButton');
        if (deleteButton) {
            deleteButton.addEventListener('click', e => {
                e.preventDefault();

                axios.delete(`/campgrounds/<%= campground._id %>`)
                    .then(res => {
                        if (res.data.success) {
                            window.location.href = '/campgrounds';
                        } else {
                            alert(res.data.msg);
                        }
                    })
                    .catch(err => {
                        alert(err.response.data.msg);
                        if (err.response.data.redirectUrl) {
                            window.location.href = err.response.data.redirectUrl;
                        }
                    });
            });
        }

        const reviewButton = document.querySelector('#reviewButton');
        if (reviewButton) {
            reviewButton.addEventListener('click', e => {
                e.preventDefault();

                //form validation
                const form = document.querySelector('#reviewForm');
                if (!formVaildation(form)) {
                    return;
                }

                //review submit
                const rating = document.querySelector('input[name="rating"]:checked').value;
                const body = document.querySelector('#body').value;

                axios.post(form.action, {
                    rating,
                    body
                })
                    .then(res => {
                        if (res.data.success) {
                            window.location.reload();
                        } else {
                            alert(res.data.msg);
                        }
                    })
                    .catch(err => {
                        alert(err.response.data.msg);
                        if (err.response.data.redirectUrl) {
                            window.location.href = err.response.data.redirectUrl;
                        }
                    });
            });
        }

        const reviewDeleteButtons = document.querySelectorAll('button[name="reviewDeleteButton"]');
        if (reviewDeleteButtons) {
            reviewDeleteButtons.forEach(button => {
                button.addEventListener('click', e => {
                    e.preventDefault();

                    const form = button.parentElement;
                    axios.delete(form.action)
                        .then(res => {
                            if (res.data.success) {
                                window.location.reload();
                            } else {
                                alert(res.data.msg);
                            }
                        })
                        .catch(err => {
                            alert(err.response.data.msg);
                            if (err.response.data.redirectUrl) {
                                window.location.href = err.response.data.redirectUrl;
                            }
                        });
                });
            });
        }        
    </script>
    <script>
        const mapToken = '<%= process.env.MAPBOX_TOKEN %>';        
        const campground = <%- JSON.stringify(campground); %>;
    </script>
    <script src="/js/showPageMap.js"></script>